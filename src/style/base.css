
/* Typography */
@import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Lato:wght@400;700&display=swap');
  
/* Brand Colors */
:root {
    --pastel-pink: #E5B6B0;
    --sunflower-yellow: #F1B041;
    --off-white: #FFFOE1;
    --dark-green: #353E2D;
    --olive-green: #6A7350;
    --dusty-rose: #C09A8A;
  }
  
  
  body, button, input, textarea {
    font-family: 'Lato', sans-serif;
    color: var(--dark-green);
  }
  
  h1, h2, h3, h4, h5, h6 {
    font-family: 'Playfair Display', serif;
    color: var(--olive-green);
  }
  
  h1 {
    font-size: 3rem; /* Adjust size as needed */
    font-weight: 700;
  }
  
  h2 {
    font-size: 2.5rem;
    font-weight: 700;
  }
  
  /* header, images, etc. */
  .image-container {
    position: relative;
  }
  
  .float-image {
    position: absolute;
    top: -50px; /* Adjust this value to how much you want the image to float above */
    right: 0;
    z-index: 10; /* Ensure the z-index is higher than that of the header */
    width: 100%; /* Adjust if necessary */
    max-width: 500px; /* Adjust based on your design */
  }
  
  /* Adjust header z-index to ensure it is lower than the image's z-index */
  header {
    position: relative;
    z-index: 1;
  }
  
  /* Rest of your custom Skeleton styling here */
  
  /* Button styling */
  button {
    background-color: var(--sunflower-yellow);
    color: var(--dark-green);
    border: none;
    padding: 1rem 2rem;
    font-weight: bold;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }
  
  button:hover {
    background-color: var(--dusty-rose);
  }
  
  /* Link styling */
  a {
    color: var(--olive-green);
    text-decoration: none;
    transition: color 0.3s ease;
  }
  
  a:hover {
    color: var(--sunflower-yellow);
  }

.cta-button {
  width: 100%;
  height: 100%;
  background-color: var(--sunflower-yellow); /* Using CSS variable for the color */
  border: none;
  cursor: pointer;
  color: var(--dark-green); /* Assuming this is a contrasting color for text */
  font-size: 1.25rem; /* Adjust size as needed */
  padding: 1rem 2rem; /* Adjust padding as needed */
  text-align: center;
  display: inline-block; /* For <a> tag to behave like a button */
  text-decoration: none; /* Remove underline from <a> tag */
  border-radius: 4px; /* Optional: if you want rounded corners */
}

/* Add styles for hover state for better user interaction feedback */
.cta-button:hover,
.cta-button:focus {
  background-color: #e09c32; /* A slightly darker shade for interaction */
  outline: none; /* Remove the focus outline and replace with a state change */
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .cta-button {
    font-size: 1rem; /* Smaller text on mobile devices */
    padding: 0.75rem 1.5rem; /* Adjust padding as needed for smaller screens */
  }
}


  /* Layout and Grid */
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 15px;
  }
  
  .row {
    display: flex;
    flex-wrap: wrap;
    margin: 0 -15px;
  }
  
  .col {
    padding: 0 15px;
    flex: 1;
  }
  
  /* Misc */
  /* Add other classes like modals, nav, etc., based on your layout structure */
  
  /* Example for the modal styling */
  .modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    padding: 50px;
    box-sizing: border-box;
  }
  
  .modal-content {
    background-color: var(--off-white);
    margin: auto;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
  }
  
  .modal-close {
    color: var(--dark-green);
    float: right;
    font-size: 28px;
    font-weight: bold;
  }
  
  .modal-close:hover,
  .modal-close:focus {
    color: var(--sunflower-yellow);
    text-decoration: none;
    cursor: pointer;
  }
  